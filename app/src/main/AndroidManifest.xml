<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="www.howard.com.advertisement">

    <!-- <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /> -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!--对WIFI访问的用户权限部分 add by mayijie at 2017 04 22-->
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <!--对WIFI访问的用户权限部分 add by mayijie at 2017 04 22-->
    <!-- 可选 ，如果添加这个权限 apk下载在sdcard中的Android/data/包名/cache目录下 否则下载到 内存中的 /data/data/包名/cache中 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <!--
   Android 系统在完成启动后，会发射一个ACTION_BOOT_COMPLETED的广播，
   并且这个广播只有系统才能发送，来广播系统启动已完成，
   因此我们如果可以在APP内拦截这个广播的话，就可以让APP做到开机自启动
    -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!--
        安装apk权限
          <uses-permission android:name="android.permission.INSTALL_PACKAGES"/>
    -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".AdvertisementActivity"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <receiver
            android:name=".event.ScanningReceiver"
            android:enabled="true"
            android:exported="true" />

        <receiver
            android:name=".receiver.BootCompletedReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>

        <service
            android:name=".service.ReceiverMQTTService"
            android:enabled="true"
            android:exported="true" />

        <receiver
            android:name=".receiver.TimingTaskReceiver"
            android:enabled="true"
            android:exported="true" />

        <service
            android:name=".service.MonitorVersionUpdateService"
            android:enabled="true"
            android:exported="true" />

    </application>

</manifest>